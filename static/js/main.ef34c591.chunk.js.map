{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","map","filter","elem","includes","searchMonster","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","monsters","fetch","then","response","json","users","this","filteredMonster","toLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAYeA,EATF,SAACC,GACV,OACI,sBAAKC,UAAU,kBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,6BAAKN,EAAMI,QAAQG,YCQhBC,MAZf,SAAkBR,GAEd,OACI,qBAAKC,UAAU,YAAf,SAEMD,EAAMI,QAAQK,KAAK,SAAAL,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,OAA0BK,QAAQ,SAAAC,GAC/E,OAAOA,EAAKX,MAAMI,QAAQE,KAAKM,SAASZ,EAAMa,qBCOjDC,G,MAdG,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAC7B,OACI,8BACI,uBACAf,UAAU,SACVgB,KAAK,SACLF,YAAaA,EACbG,SAAWF,QC4BRG,G,wDAhCb,aAAc,IAAD,8BACX,gBAaFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbrC,EAAKC,MAAO,CACVC,SAAU,GACVJ,YAAa,IAJJ,E,qDAOb,WAAoB,IAAD,OACjBK,MAAM,8CACLC,MAAM,SAACC,GAAD,OAAcA,EAASC,UAC7BF,MAAM,SAACG,GAAD,OAAW,EAAKV,SAAS,CAACK,SAAUK,S,oBAQ7C,WACE,MAAgCC,KAAKP,MAA9BC,EAAP,EAAOA,SAAUJ,EAAjB,EAAiBA,YACXW,EAAkBP,EAAShB,QAAQ,SAAAN,GAAO,OAAIA,EAAQE,KAAK4B,cACxCtB,SAASU,EAAYY,kBAC9C,OACE,sBAAKjC,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CAAWc,YAAY,mBAAmBC,aAAcgB,KAAKhB,eAC7D,cAAC,EAAD,CAAUZ,QAAS6B,EAAiBpB,cAAemB,KAAKP,MAAMH,qB,GA3BtDa,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ef34c591.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.style.css';\r\n\r\nconst Card = (props) => {\r\n    return(\r\n        <div className='card-container '>\r\n            <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n            <h2>{props.monster.name}</h2>\r\n            <h3>{props.monster.email}</h3>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;\r\n","import React, {Component, useState} from 'react';\r\nimport './card-list.css';\r\nimport Card from '../card/card.component';\r\n\r\nfunction CardList(props) {\r\n   \r\n    return (\r\n        <div className='card-list'>\r\n            {\r\n              props.monster.map( monster => <Card key={monster.id} monster={monster} />).filter( elem => {\r\n                  return elem.props.monster.name.includes(props.searchMonster);\r\n              })\r\n            }\r\n        </div>\r\n    )     \r\n}\r\nexport default CardList;\r\n\r\n","import React, {Component} from 'react';\r\nimport './search-box.css'\r\n\r\nconst SearchBox = ({placeholder, handleChange}) => {\r\n    return(\r\n        <div >\r\n            <input \r\n            className='search' \r\n            type='search' \r\n            placeholder={placeholder} \r\n            onChange= {handleChange}\r\n            >\r\n            </input>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React, {Component} from 'react';\nimport CardList from  './components/card-list/card-list.component.jsx';\nimport SearchBox from './components/search-box/search-box.component.jsx';\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state ={\n      monsters: [],\n      searchField: ''\n    }\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then( (response) => response.json())\n    .then( (users) => this.setState({monsters: users}));\n    \n  }\n\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value})\n  }\n\n  render(){\n    const {monsters, searchField} = this.state;\n    const filteredMonster = monsters.filter( monster => monster.name.toLowerCase()\n                            .includes(searchField.toLowerCase()));\n    return (\n      <div className='App'>\n          <h1>Monsters Roladex</h1>\n          <SearchBox placeholder='Search Monster..' handleChange={this.handleChange}/>\n          <CardList monster={filteredMonster} searchMonster={this.state.searchField}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}